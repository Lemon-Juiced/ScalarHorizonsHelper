plugins {
    id 'java-library'
    id 'maven-publish'
    id 'net.neoforged.moddev' version '2.0.106'
    id 'idea'
}

tasks.named('wrapper', Wrapper).configure {
    distributionType = Wrapper.DistributionType.BIN
}

version = mod_version
group = mod_group_id

repositories {
    mavenLocal()
    maven { url = "https://minecraft.curseforge.com/api/maven/"}
    maven { url = "https://www.cursemaven.com"}
    maven { url 'https://maven.blamejared.com' }
}

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

neoForge {
    version = project.neo_version

    parchment {
        mappingsVersion = project.parchment_mappings_version
        minecraftVersion = project.parchment_minecraft_version
    }

    runs {
        client {
            client()
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        }

        server {
            server()
            programArgument '--nogui'
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        }

        gameTestServer {
            type = "gameTestServer"
            systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
        }

        data {
            data()
            programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
        }

        configureEach {
            systemProperty 'forge.logging.markers', 'REGISTRIES'
            logLevel = org.slf4j.event.Level.DEBUG
        }
    }

    mods {
        "${mod_id}" {
            sourceSet(sourceSets.main)
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

configurations {
    runtimeClasspath.extendsFrom localRuntime
}

dependencies {
    // Dependencies
    implementation "curse.maven:actually_additions-228404:7161269" // Actually Additions
    implementation "curse.maven:cb_multipart-258426:6583756" // CB Multipart
    implementation "curse.maven:codechickenlib-242818:6583751" // CodeChickenLib 1.8+
    implementation "curse.maven:curios-309927:6529130" // Curios
    implementation "curse.maven:enderio-64578:7134432" // Ender IO
    implementation "curse.maven:project_red_core-228702:6885875" // Project Red - Core
    implementation "curse.maven:project_red_expansion-229048:6885876" // Project Red - Expansion
    implementation "curse.maven:project_red_exploration-229049:6885877" // Project Red - Exploration
    implementation "curse.maven:project_red_fabrication-230111:6885878" // Project Red - Fabrication
    implementation "curse.maven:project_red_illumination-229046:6885879" // Project Red - Illumination
    implementation "curse.maven:project_red_integration-229045:6885881" // Project Red - Integration
    implementation "curse.maven:project_red_transmission-478939:6885882" // Project Red - Transmission
    implementation "curse.maven:roots-246183:7162695" // Roots 4
    implementation "curse.maven:themcbroslib-387586:5844824" // TheMCBrosLib
    implementation "curse.maven:usefulfoundation-355245:5674845" // Useful Foundations
    implementation "curse.maven:usefulmachinery-355129:5678205" // Useful Machinery

    // QoL For Testing
    implementation "curse.maven:jade-324717:6853386" // Jade
    implementation "curse.maven:jei-238222:6829086" // JEI
}

var generateModMetadata = tasks.register("generateModMetadata", ProcessResources) {
    var replaceProperties = [
            minecraft_version      : minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neo_version            : neo_version,
            loader_version_range   : loader_version_range,
            mod_id                 : mod_id,
            mod_name               : mod_name,
            mod_license            : mod_license,
            mod_version            : mod_version,
            mod_authors            : mod_authors,
            mod_description        : mod_description
    ]
    inputs.properties replaceProperties
    expand replaceProperties
    from "src/main/templates"
    into "build/generated/sources/modMetadata"
}

sourceSets.main.resources.srcDir generateModMetadata

neoForge.ideSyncTask generateModMetadata

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
